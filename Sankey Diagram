import pandas as pd
import collections
from ipysankeywidget import SankeyWidget

'''
From previous analysis, we have already get the top five starting stations and top seven ending stations in 22/08/2018.

Now we want to use Sankey Diagram to visualize traffic flow among these starting and ending stations in this day.
'''

starting = ['EMBR','CIVC','MONT','POWL','12TH']
ending = ['DUBL','BALB','24TH','PHIL','DELN','WCRK','FRMT']

filename = r'D:\1st Quarter\ECE143\Data\HourlyRidership\date-hour-soo-dest-2018.csv'
fo = pd.read_csv(filename, index_col=0, header=None, names=['Date','Hour','Departing','Arriving','Count'])
fo_find_date = fo.loc['2018-08-22']

select_date = collections.OrderedDict()
for i in starting:
    select_date[i] = fo_find_date[fo_find_date.Departing == i]


specific_start_end = collections.OrderedDict()
startend_number = {}
for start in starting:
    for end in ending:
        specific_start_end[start+end] = select_date[start][select_date[start].Arriving == end]
        add_up = 0
        for num in list(specific_start_end[start+end].Count):
            add_up += num
            startend_number[start+end] = add_up

traffic_flow = []      
for key in specific_start_end.keys():
    sankey_dict = {}
    sankey_dict['source'] = specific_start_end[key]['Departing'].iloc[0]    
    sankey_dict['target'] = specific_start_end[key]['Arriving'].iloc[0]
    sankey_dict['value'] = specific_start_end[key]['Count'].sum()
    traffic_flow.append(sankey_dict)


color = ['grey','darkgrey', 'dimgrey', 'lightgrey','silver']
for col in color:    
    for element in traffic_flow:
        for i in range(5):
            if element['source'] == starting[i]:
                element['color'] = color[i]
    

s = SankeyWidget(links = traffic_flow,margins=dict(top=0, bottom=0,left=50,right=100))     
s.auto_save_png('1.png')
